# Increase/decrease `weight` to enable/disable tasks. In the example setup
# `SimpleLoadTest` is disabled because of weight=0, and envelope sending is
# disabled as well. Effectively we only send random events as pure JSON.

users:
  # A task that sends a couple events from files.
  SimpleLoadTest:
    wait_time: constant(1)
    num_projects: 10
    weight: 0
    task_set:
      tasks:
        file_event_task_factory:
          weight: 0
          filename: test-events/small.json

        file_envelope_event_task_factory:
          weight: 0
          filename: path/to/custom/file.json

        # Sessions will be generated in real time
        session_event_task_factory:
          weight: 0
          release: 123

  # A task that generates random events based on config parameters
  RandomEvents:
    wait_time: constant(1)
    num_projects: 10
    weight: 1
    task_set:
      tasks:
        random_envelope_event_task_factory:
          weight: 0
          # This task generally accepts the same arguments as `random_event_task_factory`.
          with_level: true
          num_event_groups: 1
          num_releases: 10

        random_event_task_factory:
          weight: 1
          with_level: true

          # How many issues to create.
          num_event_groups: 10

          # Amount of users to generate, if null (~), users will just be
          # entirely random IPv4 addresses.
          max_users: ~

          # Breadcrumb options
          min_breadcrumbs: 0
          max_breadcrumbs: 50
          breadcrumb_categories: ~
          breadcrumb_levels: ~
          breadcrumb_types: ~
          breadcrumb_messages: ~

          # Add a native stacktrace such that symbolicator is part of the
          # equation. The debug files necessary for processing the stacktrace
          # can be found in the native-images/ folder and can be uploaded with:
          #
          #   sentry-cli upload-dif . --org sentry --project internal
          with_native_stacktrace: false

          # Add a javascript stacktrace that can be symbolicated
          # need to create release and upload the js-images/ folder
          #   sentry-cli releases new <RELEASE_NAME>
          #   sentry-cli releases files <RELEASE_NAME> upload-sourcemaps ./js-images
          #   sentry-cli releases finalize <RELEASE_NAME>
          #
          # note if native stacktrace is enabled the javascript stacktrace will
          # be ignored
          with_javascript_stacktrace: false
          # In case of javascript, need to specify a fixed release in order to
          # match the source files
          #
          # The release should match the release specified when uploading the
          # source files with sentry-cli
          #
          # release: "1"

          # Amount of stacktraces and frames to generate, only in effect if js or native
          # stacktraces are generated at all
          num_stacktraces: 5
          min_frames: 5
          max_frames: 30

          # Amount of random releases to generate.
          num_releases: 10
          # Single specific hardcoded release.
          release: ~

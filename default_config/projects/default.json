{
  "publicKeys": [
    {
      "isEnabled": true,
      "quotas": []
    }
  ],
  "rev": "5ceaea8c919811e8ae7daae9fe877901",
  "disabled": false,
  "slug": "python",
  "organizationId": 1,
  "projectId": 1,
  "config": {
    "allowedDomains": [
      "*"
    ],
    "piiConfig": {
      "rules": {},
      "applications": {
        "$string": [
          "@email",
          "@mac",
          "@creditcard",
          "@userpath"
        ],
        "$object": [
          "@password"
        ]
      }
    },
    "excludeFields": [],
    "filterSettings": {},
    "scrubIpAddresses": false,
    "sensitiveFields": [],
    "scrubDefaults": true,
    "scrubData": true,
    "groupingConfig": {
      "id": "legacy:2019-03-12",
      "enhancements": "eJybzDhxY05qemJypZWRgaGlroGxrqHRBABbEwcC"
    },
    "blacklistedIps": [
      "127.43.33.22"
    ],
    "trustedRelays": [],
    "features": [
      "organizations:metrics-extraction"
    ],
    "transactionMetrics": {
      "extractMetrics": [
        "sentry.transactions.user",
        "sentry.transactions.transaction.duration",
        "sentry.transactions.measurements.fp",
        "sentry.transactions.measurements.fcp",
        "sentry.transactions.measurements.lcp",
        "sentry.transactions.measurements.fid",
        "sentry.transactions.measurements.cls",
        "sentry.transactions.measurements.ttfb",
        "sentry.transactions.measurements.ttfb.requesttime",
        "sentry.transactions.measurements.app_start_warm",
        "sentry.transactions.measurements.app_start_cold",
        "sentry.transactions.measurements.stall_count",
        "sentry.transactions.measurements.stall_longest_time",
        "sentry.transactions.measurements.stall_percentage",
        "sentry.transactions.measurements.stall_total_time",
        "sentry.transactions.measurements.frames_slow",
        "sentry.transactions.measurements.frames_slow_rate",
        "sentry.transactions.measurements.frames_frozen",
        "sentry.transactions.measurements.frames_total",
        "sentry.transactions.measurements.frames_frozen_rate"
      ],
      "extractCustomTags": [
        "myCustomTag"
      ]
    },
    "dynamicSampling": {
      "rules": [
        {
          "sampleRate": 1,
          "type": "transaction",
          "condition": {
            "op": "and",
            "inner": []
          },
          "id": 1
        }
      ]
    }
  }
}
